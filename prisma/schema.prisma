generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String         @id @default(cuid())
  name            String
  email           String         @unique
  xata_updatedat  DateTime       @default(now()) @db.Timestamptz(6)
  xata_id         String         @unique(map: "User__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version    Int            @default(0)
  xata_createdat  DateTime       @default(now()) @db.Timestamptz(6)
  isEmailVerified Boolean
  avatar_url      String
  oAuthAccounts   OAuthAccount[]
  passwords       Password[]
  sessions        Session[]
}

model OAuthAccount {
  providerId     String
  providerUserId String
  userId         String
  xata_id        String   @unique(map: "OAuthAccount__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([providerId, providerUserId])
}

model Password {
  id             Int      @id @default(autoincrement())
  hashedPassword String
  userId         String
  xata_id        String   @unique(map: "Password__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  id             String   @id
  userId         String
  expiresAt      DateTime
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  xata_id        String   @unique(map: "Session__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model EmailVerificationCode {
  id             Int      @id @default(autoincrement())
  userId         String
  code           String
  email          String
  expiresAt      DateTime
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  xata_id        String   @unique(map: "EmailVerificationCode__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
}
